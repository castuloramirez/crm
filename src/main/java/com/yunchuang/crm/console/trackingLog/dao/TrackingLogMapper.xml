<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunchuang.crm.console.trackingLog.dao.ITrackingLogDao" >
  <resultMap id="BaseResultMap" type="com.yunchuang.crm.console.trackingLog.model.TrackingLog" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="TRACKINGLOGNO" property="trackingLogNo" jdbcType="VARCHAR" />
    <result column="PROJECTNO" property="projectNo" jdbcType="VARCHAR" />
    <result column="CREATETIME" property="createTime" jdbcType="VARCHAR" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="FOUNDEROPENID" property="founderOpenid" jdbcType="VARCHAR" />
    <result column="FOUNDERNAME" property="founderName" jdbcType="VARCHAR" />
    <result column="FOUNDERIMAGE" property="founderImage" jdbcType="VARCHAR" />
  </resultMap>

  <!-- 1.增加 -->
  <insert id="add" parameterType="com.yunchuang.crm.console.trackingLog.model.TrackingLog">
    INSERT INTO crm_trackinglog VALUES
    (crm_trackinglog_seq.nextval,
    #{trackingLogNo,jdbcType=VARCHAR},
    #{projectNo,jdbcType=VARCHAR},
    #{createTime,jdbcType=VARCHAR},
    #{title,jdbcType=VARCHAR},
    #{content,jdbcType=VARCHAR},
    #{founderOpenid,jdbcType=VARCHAR},
    #{founderName,jdbcType=VARCHAR},
    #{founderImage,jdbcType=VARCHAR}
    )
  </insert>

  <!-- 2.更改 -->
  <update id="update" parameterType="com.yunchuang.crm.console.trackingLog.model.TrackingLog">
    UPDATE crm_trackinglog SET
    trackingLogNo=#{trackingLogNo,jdbcType=VARCHAR},
    projectNo=#{projectNo,jdbcType=VARCHAR},
    createTime=#{createTime,jdbcType=VARCHAR},
    title=#{title,jdbcType=VARCHAR},
    content=#{content,jdbcType=VARCHAR},
    founderOpenid=#{founderOpenid,jdbcType=VARCHAR},
    founderName=#{founderName,jdbcType=VARCHAR},
    founderImage=#{founderImage,jdbcType=VARCHAR}
    WHERE id=#{id}
  </update>

  <!-- 3.删除 -->
  <delete id="delete" parameterType="java.util.Arrays">
    DELETE FROM crm_trackinglog where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  <!-- 4.读取列表 -->
  <select id="list" resultMap="BaseResultMap">
    SELECT * FROM crm_trackinglog ORDER BY id
  </select>

  <!-- 5.根据ID查找 -->
  <select id="loadById" resultMap="BaseResultMap">
    SELECT * FROM crm_trackinglog WHERE id=#{id}
  </select>

  <!-- 6.查询所有数量 -->
  <select id="count" resultType="int">
    SELECT count(*) FROM crm_trackinglog
  </select>

  <!-- 7.控制台分页读 -->
  <select id="findByConsole" resultMap="BaseResultMap">
    <![CDATA[
			SELECT *
				FROM (SELECT ab.*, ROWNUM RN
					FROM (SELECT * FROM crm_trackinglog ORDER BY id DESC) ab
						WHERE ROWNUM <= (#{max}))
			WHERE RN >= (#{min})
		]]>
  </select>

  <!-- 8.清除表,不支持回滚 -->
  <select id="truncateAll" resultMap="BaseResultMap">
    TRUNCATE TABLE crm_trackinglog
  </select>
  
</mapper>